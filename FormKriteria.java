package Form;

import database.konek;
import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import jdk.nashorn.internal.runtime.regexp.joni.Warnings;

/**
 *
 * @author SIFA
 */
public class FormKriteria extends javax.swing.JPanel {

    /**
     * Creates new form FormKriteria
     */
    public PreparedStatement st;
    public ResultSet rs;
    public Connection conn = new konek().KoneksiDB();
    public DefaultTableModel tabel;
    String id, nama;
    
    DecimalFormat d = new DecimalFormat("#.##");
    double bobot;
    public FormKriteria() {
        
        initComponents();   
        focus();
        kosong();
        mainKriteria();
        kodeAuto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanelKri = new javax.swing.JPanel();
        mainKriteria = new javax.swing.JPanel();
        kriteria = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_kriteria = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        addkri = new javax.swing.JButton();
        ubahkri = new javax.swing.JButton();
        delkri = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        K1 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        carikri = new javax.swing.JTextField();
        btncarikri = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        K2 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        K3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        K4 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        K5 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        K6 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        K7 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        idkri = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(331, 402));
        setLayout(new java.awt.CardLayout());

        mainPanelKri.setLayout(new java.awt.CardLayout());

        mainKriteria.setBackground(new java.awt.Color(255, 255, 255));
        mainKriteria.setLayout(new java.awt.CardLayout());

        kriteria.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Verdana", 0, 25)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DATA KRITERIA");

        tbl_kriteria.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        tbl_kriteria.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbl_kriteria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "K1", "K2", "K3", "K4", "K5", "K6", "K7"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_kriteria.setRowHeight(20);
        tbl_kriteria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_kriteriaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_kriteria);
        if (tbl_kriteria.getColumnModel().getColumnCount() > 0) {
            tbl_kriteria.getColumnModel().getColumn(0).setResizable(false);
        }

        addkri.setBackground(new java.awt.Color(125, 234, 224));
        addkri.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        addkri.setText("Tambah");
        addkri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addkriActionPerformed(evt);
            }
        });

        ubahkri.setBackground(new java.awt.Color(125, 234, 224));
        ubahkri.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ubahkri.setText("Update");
        ubahkri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahkriActionPerformed(evt);
            }
        });

        delkri.setBackground(new java.awt.Color(125, 234, 224));
        delkri.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        delkri.setText("Hapus");
        delkri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delkriActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel11.setText("K1");

        K1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        btncarikri.setBackground(new java.awt.Color(125, 234, 224));
        btncarikri.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        btncarikri.setText("Cari");
        btncarikri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncarikriActionPerformed(evt);
            }
        });

        refresh.setBackground(new java.awt.Color(125, 234, 224));
        refresh.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        jLabel2.setText("K1 (Harga)");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        jLabel3.setText("K2 (Chipset)");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        jLabel4.setText("K3 (RAM)");

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        jLabel5.setText("K4 (ROM)");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        jLabel6.setText("K5 (Kamera)");

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        jLabel7.setText("K6 (Baterai)");

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 15)); // NOI18N
        jLabel8.setText("K7 (Layar)");

        jSeparator2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel9.setText("K2");

        K2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel10.setText("K3");

        K3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel12.setText("K4");

        K4.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel13.setText("K5");

        K5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel14.setText("K6");

        K6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel15.setText("K7");

        K7.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 15)); // NOI18N
        jLabel16.setText("ID");

        javax.swing.GroupLayout kriteriaLayout = new javax.swing.GroupLayout(kriteria);
        kriteria.setLayout(kriteriaLayout);
        kriteriaLayout.setHorizontalGroup(
            kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator3)
            .addComponent(jSeparator2)
            .addGroup(kriteriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(kriteriaLayout.createSequentialGroup()
                        .addComponent(addkri)
                        .addGap(18, 18, 18)
                        .addComponent(ubahkri)
                        .addGap(18, 18, 18)
                        .addComponent(delkri)
                        .addGap(18, 18, 18)
                        .addComponent(refresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(carikri, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btncarikri))
                    .addGroup(kriteriaLayout.createSequentialGroup()
                        .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(kriteriaLayout.createSequentialGroup()
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(kriteriaLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel3))
                                    .addGroup(kriteriaLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kriteriaLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5))
                                    .addComponent(jLabel8)))
                            .addGroup(kriteriaLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(idkri, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(K1)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(K2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(K3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(K4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(K5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(K6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(K7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kriteriaLayout.setVerticalGroup(
            kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kriteriaLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addkri)
                        .addComponent(ubahkri)
                        .addComponent(delkri))
                    .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(carikri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btncarikri))
                    .addComponent(refresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6))
                .addGap(12, 12, 12)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(idkri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kriteriaLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(K7))
                    .addGroup(kriteriaLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(K6))
                    .addGroup(kriteriaLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(K5))
                    .addGroup(kriteriaLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(K4))
                    .addGroup(kriteriaLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(K3))
                    .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(kriteriaLayout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(K1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kriteriaLayout.createSequentialGroup()
                            .addGroup(kriteriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(jLabel11))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(K2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
        );

        mainKriteria.add(kriteria, "card2");

        mainPanelKri.add(mainKriteria, "card2");

        add(mainPanelKri, "card4");
    }// </editor-fold>//GEN-END:initComponents

    private void focus(){
        idkri.requestFocus();
        
    }
    private void kosong(){
        K2.setText("");
        K3.setText("");
        K4.setText("");
        K5.setText("");
        K6.setText("");
        K7.setText("");
        K1.setText("");
        carikri.setText("");
    }
    private void cari(){
        DefaultTableModel tabel = new DefaultTableModel();
        tabel.addColumn("ID");
        tabel.addColumn("K1 (Harga)");
        tabel.addColumn("K2 (Chipset)");
        tabel.addColumn("K3 (RAM)");
        tabel.addColumn("K4 (ROM)");
        tabel.addColumn("K5 (Kamera)");
        tabel.addColumn("K6 (Baterai)");
        tabel.addColumn("K7 (Layar)");
        
        
        try {
            String sql = "SELECT * FROM tbl_kriteria WHERE id LIKE '%"+carikri.getText()+"%'";
            Connection conn = (Connection)konek.KoneksiDB();
            Statement k = conn.createStatement();
            ResultSet rs = k.executeQuery(sql);
            while(rs.next()){
                tabel.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getString(6),
                    rs.getString(7),
                    rs.getString(8),
                });
            }
            tbl_kriteria.setModel(tabel);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private void mainKriteria(){
        DefaultTableModel tabel = new DefaultTableModel();
        tabel.addColumn("ID");
        tabel.addColumn("K1 (Harga)");
        tabel.addColumn("K2 (Chipset)");
        tabel.addColumn("K3 (RAM)");
        tabel.addColumn("K4 (ROM)");
        tabel.addColumn("K5 (Kamera)");
        tabel.addColumn("K6 (Baterai)");
        tabel.addColumn("K7 (Layar)");
        
        try {
            String sql = "SELECT * FROM tbl_kriteria";
            Statement k = conn.createStatement();
            ResultSet rs = k.executeQuery(sql);
            while(rs.next()){
                tabel.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getString(6),
                    rs.getString(7),
                    rs.getString(8),
                });
            }
            tbl_kriteria.setModel(tabel);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    private void kodeAuto(){ 
        try {
            Statement stat = conn.createStatement();
            String sql = "Select max(right(id,1)) from tbl_kriteria";
            ResultSet rs = stat.executeQuery(sql);

            while (rs.next()) {
                if (rs.first() == false) {
                } else {
                    rs.last();
                    int set_id = rs.getInt(1) + 1;
                    String no = String.valueOf(set_id);
                    int id_next = no.length();

                    for (int a = 0; a < 1 - id_next; a++) {
                        no = "" + no;
                    }
                    idkri.setText(no);
                }
            }
        } catch (Exception e) {
        }
    }
    private void addkriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addkriActionPerformed
        // TODO add your handling code here:
       String id = idkri.getText();
        Double k1 = Double.parseDouble(K1.getText());
        Double k2 = Double.parseDouble(K2.getText());
        Double k3 = Double.parseDouble(K3.getText());
        Double k4 = Double.parseDouble(K4.getText());
        Double k5 = Double.parseDouble(K5.getText());
        Double k6 = Double.parseDouble(K6.getText());
        Double k7 = Double.parseDouble(K7.getText());
        
        
        if( id.equals("")||k1.equals("") || k2.equals("") || k3.equals("") || k4.equals("") || k5.equals("") || k6.equals("") || k7.equals("")){
            JOptionPane.showMessageDialog(null, "Form tidak boleh kosong!","informasi", JOptionPane.WARNING_MESSAGE);
        }
        else{
            int confir = JOptionPane.showConfirmDialog(null, "Simpan Data ?","Konfirmasi",JOptionPane.YES_NO_OPTION);
            if(confir == 0){
                try {
                    String sql = "INSERT INTO tbl_kriteria VALUES("+id+","+k1+","+k2+","+k3+","+k4+","+k5+","+k6+","+k7+")";
                    Connection conn = (Connection)konek.KoneksiDB();
                    PreparedStatement st = conn.prepareStatement(sql);
                    st.execute();
                    
                    JOptionPane.showMessageDialog(null, "Data Kriteria Berhasil Disimpan!");
                    mainKriteria();
                    kosong();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }
        
    }//GEN-LAST:event_addkriActionPerformed

    private void ubahkriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahkriActionPerformed
        // TODO add your handling code here:
        String id = idkri.getText();
        Double k1 = Double.parseDouble(K1.getText());
        Double k2 = Double.parseDouble(K2.getText());
        Double k3 = Double.parseDouble(K3.getText());
        Double k4 = Double.parseDouble(K4.getText());
        Double k5 = Double.parseDouble(K5.getText());
        Double k6 = Double.parseDouble(K6.getText());
        Double k7 = Double.parseDouble(K7.getText());
        
        
        if(id.equals("") || k1.equals("") || k2.equals("") || k3.equals("") || k4.equals("") || k5.equals("") || k6.equals("") || k7.equals("")){
            JOptionPane.showMessageDialog(null, "Pilih data terlebih dahulu","informasi", JOptionPane.WARNING_MESSAGE);
        }
        else{
            int confir = JOptionPane.showConfirmDialog(null, "Ubah Data ?","Konfirmasi",JOptionPane.YES_NO_OPTION);
            if(confir == 0){
                try {
                    String sql = "UPDATE tbl_kriteria SET K1 = "+k1+", K2 = "+k2+", K3 = "+k3+", K4 = "+k4+","
                            + "K5 = "+k5+", K6 = "+k6+", K7 = "+k7+""
                            + "WHERE tbl_kriteria.id = '"+id+"'";
                    Connection conn = (Connection)konek.KoneksiDB();
                    PreparedStatement st = conn.prepareStatement(sql);
                    st.execute();
                    
                    JOptionPane.showMessageDialog(null, "Data Kriteria Berhasil Diubah!");
                    mainKriteria();
                    kosong();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_ubahkriActionPerformed

    private void delkriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delkriActionPerformed
        // TODO add your handling code here:
         int ID = Integer.parseInt(idkri.getText());
         
        if(K1.equals("")){
            JOptionPane.showMessageDialog(null, "Pilih data terlebih dahulu","informasi", JOptionPane.WARNING_MESSAGE);
        }
        else{
            int confir = JOptionPane.showConfirmDialog(null, "Hapus Data ?","Konfirmasi",JOptionPane.YES_NO_OPTION);
            if(confir == 0){
                try {
                     String sql = "DELETE FROM tbl_kriteria WHERE id = "+ID;
                    Connection conn = (Connection)konek.KoneksiDB();
                    PreparedStatement st = conn.prepareStatement(sql);
                    st.execute();
                    
                    JOptionPane.showMessageDialog(null, "Data Kriteria Berhasil Dihapus!");
                    mainKriteria();
                    kosong( );
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_delkriActionPerformed

    private void tbl_kriteriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_kriteriaMouseClicked
        // TODO add your handling code here:
        int no = tbl_kriteria.rowAtPoint(evt.getPoint());
        
        String id = tbl_kriteria.getValueAt(no, 0).toString();
        idkri.setText(id);
        String k1 = tbl_kriteria.getValueAt(no, 1).toString();
        K1.setText(k1);
        String k2 = tbl_kriteria.getValueAt(no, 2).toString();
        K2.setText(k2);
        String k3 = tbl_kriteria.getValueAt(no, 3).toString();
        K3.setText(k3);
        String k4 = tbl_kriteria.getValueAt(no, 4).toString();
        K4.setText(k4);
        String k5 = tbl_kriteria.getValueAt(no, 5).toString();
        K5.setText(k5);
        String k6 = tbl_kriteria.getValueAt(no, 6).toString();
        K6.setText(k6);
        String k7 = tbl_kriteria.getValueAt(no, 7).toString();
        K7.setText(k7);
       
          
        
    }//GEN-LAST:event_tbl_kriteriaMouseClicked

    private void btncarikriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncarikriActionPerformed
        // TODO add your handling code here:
        cari();
        kosong();
        
    }//GEN-LAST:event_btncarikriActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        mainKriteria();
    }//GEN-LAST:event_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField K1;
    private javax.swing.JTextField K2;
    private javax.swing.JTextField K3;
    private javax.swing.JTextField K4;
    private javax.swing.JTextField K5;
    private javax.swing.JTextField K6;
    private javax.swing.JTextField K7;
    private javax.swing.JButton addkri;
    private javax.swing.JButton btncarikri;
    private javax.swing.JTextField carikri;
    private javax.swing.JButton delkri;
    private javax.swing.JTextField idkri;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPanel kriteria;
    private javax.swing.JPanel mainKriteria;
    private javax.swing.JPanel mainPanelKri;
    private javax.swing.JButton refresh;
    private javax.swing.JTable tbl_kriteria;
    private javax.swing.JButton ubahkri;
    // End of variables declaration//GEN-END:variables
}
